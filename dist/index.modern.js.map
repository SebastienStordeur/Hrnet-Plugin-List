{"version":3,"file":"index.modern.js","sources":["../src/Components/Option.tsx","../src/index.tsx"],"sourcesContent":["/* eslint-disable prettier/prettier */\r\nimport React from 'react'\r\n\r\ninterface IOption {\r\n  value: string\r\n  onClick?: any\r\n  activeValue: string\r\n}\r\n\r\nconst Option: React.FC<IOption> = (props) => {\r\n  return (\r\n    <li\r\n      value={props.value}\r\n      className={`px-4 py-1 w-full h-8 border-solid border-[1px] border-blue hover:bg-blue hover:text-white cursor-pointer ${\r\n        props.value === props.activeValue\r\n          ? 'bg-blue text-white'\r\n          : 'bg-white text-blue'\r\n      }`}\r\n      onClick={() => props.onClick(props.value)}\r\n    >\r\n      {props.value}\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default Option\r\n","/* eslint-disable no-unneeded-ternary */\n/* eslint-disable prettier/prettier */\nimport React, { useState } from 'react'\nimport Option from './Components/Option'\n\ninterface ISelect {\n  data: string[]\n  headline: string | number\n}\n\nexport const ListSelect: React.FC<ISelect> = (props) => {\n  const [isMenuOpen, setIsMenuOpen] = useState<boolean>(false)\n  const [activeValue, setActiveValue] = useState<string>('')\n\n  const openMenuHandler: () => void = () => {\n    setIsMenuOpen((prevValue) => !prevValue)\n  }\n\n  const setActiveValueHandler: (value: string) => void = (value: string) => {\n    setActiveValue(value)\n  }\n\n  return (\n    <div\n      id='select-wrapper'\n      className='bg-white text-blue rounded font-semibold cursor-pointer relative'\n    >\n      <div>\n        <ul className='h-8 py-1 px-4' onClick={openMenuHandler}>\n          <label htmlFor='department'>\n            {activeValue ? activeValue : props.headline}\n          </label>\n          <div className='absolute w-full left-0 mt-1 rounded-lg'>\n            {isMenuOpen &&\n              props.data?.map((value: string) => {\n                return (\n                  <Option\n                    value={value}\n                    key={Math.random().toString()}\n                    onClick={setActiveValueHandler}\n                    activeValue={activeValue}\n                  />\n                )\n              })}\n          </div>\n        </ul>\n      </div>\n    </div>\n  )\n}\n"],"names":["Option","props","React","value","className","activeValue","onClick","ListSelect","isMenuOpen","setIsMenuOpen","useState","setActiveValue","openMenuHandler","prevValue","setActiveValueHandler","id","htmlFor","headline","data","map","key","Math","random","toString"],"mappings":";;AASA,MAAMA,MAAM,GAAuBC,KAAD;EAChC,OACEC,mBAAA,KAAA;IACEC,KAAK,EAAEF,KAAK,CAACE;IACbC,SAAS,8GACPH,KAAK,CAACE,KAAN,KAAgBF,KAAK,CAACI,WAAtB,GACI,oBADJ,GAEI;IAENC,OAAO,EAAE,MAAML,KAAK,CAACK,OAAN,CAAcL,KAAK,CAACE,KAApB;GAPjB,EASGF,KAAK,CAACE,KATT,CADF;AAaD,CAdD;;MCCaI,UAAU,GAAuBN,KAAD;;;EAC3C,MAAM,CAACO,UAAD,EAAaC,aAAb,IAA8BC,QAAQ,CAAU,KAAV,CAA5C;EACA,MAAM,CAACL,WAAD,EAAcM,cAAd,IAAgCD,QAAQ,CAAS,EAAT,CAA9C;;EAEA,MAAME,eAAe,GAAe;IAClCH,aAAa,CAAEI,SAAD,IAAe,CAACA,SAAjB,CAAb;GADF;;EAIA,MAAMC,qBAAqB,GAA6BX,KAAD;IACrDQ,cAAc,CAACR,KAAD,CAAd;GADF;;EAIA,OACED,mBAAA,MAAA;IACEa,EAAE,EAAC;IACHX,SAAS,EAAC;GAFZ,EAIEF,mBAAA,MAAA,MAAA,EACEA,mBAAA,KAAA;IAAIE,SAAS,EAAC;IAAgBE,OAAO,EAAEM;GAAvC,EACEV,mBAAA,QAAA;IAAOc,OAAO,EAAC;GAAf,EACGX,WAAW,GAAGA,WAAH,GAAiBJ,KAAK,CAACgB,QADrC,CADF,EAIEf,mBAAA,MAAA;IAAKE,SAAS,EAAC;GAAf,EACGI,UAAU,oBACTP,KAAK,CAACiB,IADG,gDACT,YAAYC,GAAZ,CAAiBhB,KAAD;IACd,OACED,mBAAA,CAACF,MAAD;MACEG,KAAK,EAAEA;MACPiB,GAAG,EAAEC,IAAI,CAACC,MAAL,GAAcC,QAAd;MACLjB,OAAO,EAAEQ;MACTT,WAAW,EAAEA;KAJf,CADF;GADF,CADS,CADb,CAJF,CADF,CAJF,CADF;AA2BD,CAvCM;;;;"}